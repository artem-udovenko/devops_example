version: '3.8'

services:
  nginx-proxy:
    image: nginx:alpine
    depends_on:
      - frontend
      - backend
    ports:
      - "${NGINX_PROXY_PORT}:${NGINX_PROXY_PORT}"
    networks:
      - hobbie-network
    environment:
      - NGINX_PROXY_PORT=${NGINX_PROXY_PORT}
    volumes:
      - ./nginx-proxy/nginx.conf:/etc/nginx/conf.d/default.conf
    command: [sh, -c, "nginx -s reload & nginx -g 'daemon off;'"]

  db:
    image: mysql:8.0
    env_file:
      - .env
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - hobbie-network
    healthcheck:
      test: [
        "CMD", "mysqladmin", "ping", "-h", "localhost",
        "-u${MYSQL_USER}", "-p${MYSQL_PASSWORD}"
      ]
      interval: 5s
      timeout: 10s
      retries: 10

  backend:
    build: ./spring-backend
    environment:
      SPRING_DATASOURCE_USERNAME: ${MYSQL_USER}
      SPRING_DATASOURCE_PASSWORD: ${MYSQL_PASSWORD}
      SPRING_DATASOURCE_URL: jdbc:mysql://db:3306/${MYSQL_DATABASE}
    depends_on:
      db:
        condition: service_healthy
    networks:
      - hobbie-network
    expose:
      - "8080"

  frontend:
    build: ./react-frontend
    depends_on:
      - backend
    networks:
      - hobbie-network
    expose:
      - "80"

networks:
  hobbie-network:
    driver: bridge

volumes:
  mysql_data:
